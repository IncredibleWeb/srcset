{"version":3,"sources":["../src/jquery.incredible.srcset.js"],"names":["$","window","updateSrc","$element","mqs","i","length","mql","matches","attr","url","extend","srcset","find","each","initUrl","$self","this","data","split","mq","x","trim","undefined","matchMedia","replace","addListener","e","jQuery"],"mappings":"CAAA,SAAUA,EAAGC,GACT,QAASC,GAAUC,EAAUC,GACzB,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAIE,OAAQD,IACxBD,EAAIC,GAAGE,IAAIC,SACXL,EAASM,KAAK,MAAOL,EAAIC,GAAGK,KAKxCV,EAAEW,OAAOX,GACLY,OAAQ,SAAST,GAEbA,EAASU,KAAK,oBAAoBC,KAAK,WAOnC,IAAK,GAFDC,GAJAC,EAAQhB,EAAEiB,MAGVL,EAASI,EAAME,KAAK,UAAUC,MAAM,KAEpCf,KACKC,EAAI,EAAGA,EAAIO,EAAON,OAAQD,IAAK,CAEpC,GAIIe,GAJAC,EAAIT,EAAOP,GAAGiB,OAAOH,MAAM,KAC3BT,EAAMW,EAAE,EASZ,IALIA,EAAEf,OAAS,IACXc,EAAKC,EAAE,IAIAE,SAAPH,GAAoBA,EAAI,CACxB,GAAIb,GAAMN,EAAOuB,WAAW,+BAAiCJ,EAAGK,QAAQ,IAAK,MAAQ,IAErFrB,GAAIC,IACAE,IAAKA,EACLG,IAAKA,GAILH,EAAIC,UAEJO,EAAUL,OAIdM,GAAMP,KAAK,MAAOC,GAItBN,EAAIE,OAAS,GAEbF,EAAIA,EAAIE,OAAS,GAAGoB,YAAY,SAASC,GAAKzB,EAAUc,EAAOZ,KAI/DW,GACAC,EAAMP,KAAK,MAAOM,SAKnCd,OAAO2B,OAAQ3B","file":"jquery.incredible.srcset.min.js","sourcesContent":["(function($, window) {\n    function updateSrc($element, mqs) {\n        for (var i = 0; i < mqs.length; i++) {\n            if (mqs[i].mql.matches) {\n                $element.attr(\"src\", mqs[i].url);\n            }\n        }\n    }\n\n    $.extend($, {\n        srcset: function($element) {\n            // retrieve all images that contain the srcset tag\n            $element.find(\"img[data-srcset]\").each(function() {\n                var $self = $(this);\n\n                // retrieve the comma-separated srcset values\n                var srcset = $self.data(\"srcset\").split(',');\n                var initUrl;\n                var mqs = [];\n                for (var i = 0; i < srcset.length; i++) {\n                    // retrieve the url and media query for each srcset\n                    var x = srcset[i].trim().split(' ');\n                    var url = x[0];\n\n                    // if there is no viewport width, then it is the default src\n                    var mq;\n                    if (x.length > 1) {\n                        mq = x[1];\n                    }\n\n                    // if there was a media query\n                    if (mq !== undefined && mq) {\n                        var mql = window.matchMedia(\"only screen and (min-width: \" + mq.replace('w', 'px') + \")\");\n                        // create the media query list\n                        mqs[i] = {\n                            mql: mql,\n                            url: url\n                        };\n\n                        // check if it currently matches the media query\n                        if (mql.matches) {\n                            // set the image's src on init\n                            initUrl = url;\n                        }\n                    } else {\n                        // set to the default if no mq was specified\n                        $self.attr(\"src\", url);\n                    }\n                }\n\n                if (mqs.length > 0) {\n                    // listen to window resizing\n                    mqs[mqs.length - 1].addListener(function(e) { updateSrc($self, mqs); });\n                }\n\n                // if the initUrl is set becaused it matched a media query\n                if (initUrl) {\n                    $self.attr(\"src\", initUrl);\n                }\n            });\n        }\n    });\n})(window.jQuery, window);\n"]}